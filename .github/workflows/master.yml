name: CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  testing_web:
    name: Testing web
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: prisma
          POSTGRES_PASSWORD: prisma
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    env:
      DATABASE_URL: postgresql://prisma:prisma@localhost:5432/tests
    defaults:
      run:
        working-directory: web

    steps:
      - uses: actions/checkout@v2

      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            web:
              - 'web/**'

      - name: Setup node action
        if: steps.filter.outputs.web == 'true'
        uses: actions/setup-node@v2
        with:
          node-version: "16.x"

      - name: Install dependencies
        if: steps.filter.outputs.web == 'true'
        run: |
          npm ci
          npm install

      - name: Migrate tables in database
        if: steps.filter.outputs.web == 'true'
        run: npx prisma migrate deploy

      - name: Run tests of the web project.
        if: steps.filter.outputs.web == 'true'
        run: npm run test

  testing_mobile:
    name: Testing mobile
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: mobile

    steps:
      - uses: actions/checkout@v2

      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            mobile:
              - 'mobile/**'

      - name: Setup Java
        if: steps.filter.outputs.mobile == 'true'
        uses: actions/setup-java@v1
        with:
          java-version: "11"

      - name: Testing with Gradle
        if: steps.filter.outputs.mobile == 'true'
        run: ./gradlew check
